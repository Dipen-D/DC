@model Web.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

<link type="text/css" rel="stylesheet" href="@Url.Content("~/Content/style.css")"/>
<link type="text/css" rel="stylesheet" href="@Url.Content("~/Content/alessio.css")"/>

@Scripts.Render("~/bundles/jquery")
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/MicrosoftAjax.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/MicrosoftMvcAjax.js")" type="text/javascript"></script>

<script type="text/javascript">
	$(document).ready(function () {
		jQuery.validator.addMethod("enforcetrue", function (value, element, param) {
			return element.checked;
		});
		//jQuery.validator.unobtrusive.adapters.addBool("enforcetrue");
	});
</script>

<h2>@ViewBag.Title</h2>
<img id="waitimage" src="~/Images/Progress.gif" style="height: 100px; display: none; position: fixed; left: 49%; top: 49%;z-index: 10;"/>
<br />

@using (Ajax.BeginForm("AddUser", "Login", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "div1",
    InsertionMode = InsertionMode.Replace,
    LoadingElementId = "waitimage"
}))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account</h4>
    @*<hr />*@
    @Html.ValidationSummary("", new { @class = "text-danger" })

    if (Model != null)
    {
        if (!Model.TOSAccepted)
        {
            <p style="color:red;">Error, Terms of Service must be accepted to proceed.</p>   }
    }

    <div class="row">
        <div class="col-md-4 col-md-offset-4">
            <div class="form-group">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control empty", @placeholder = HttpUtility.HtmlDecode("&#xf0e0;  |  Email (private)"), @style = "font-family:Source Sans Pro, FontAwesome" })
            </div>
            <div class="form-group form-inline">
                @Html.TextBoxFor(m => m.Nickname, new { @class = "form-control", @placeholder = HttpUtility.HtmlDecode("&#xf007;  |  Public Username"), @style = "font-family:Source Sans Pro, FontAwesome; width:50%;" })
                <div class="pull-right" style="width:50%;">
                    @*@Html.DropDownListFor(m => m.Country, new SelectList(ArchBoxUtilities.GetCountries(), "Value", "Text"), HttpUtility.HtmlDecode("&#xf0ac;  |  Country"), new { @class = "form-control pull-right", @style = "font-family:Source Sans Pro, FontAwesome; width:100%; color:grey;" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = HttpUtility.HtmlDecode("&#xf023;  |  Password"), @style = "font-family:Source Sans Pro, FontAwesome" })
            </div>
            <div class="form-group">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = HttpUtility.HtmlDecode("&#xf023;  |  Confirm Password"), @style = "font-family:Source Sans Pro, FontAwesome" })
            </div>
            <div class="form-group">
                @Html.TextBoxFor(m => m.TempRegPIN, new { @class = "form-control", @placeholder = HttpUtility.HtmlDecode("&#xf084;  |  PIN"), @style = "font-family:Source Sans Pro, FontAwesome" })
            </div>
            <div class="form-group">
                @Html.CheckBoxFor(m => m.TOSAccepted)
                <span>I agree to the <a href="/TermsOfService" class="underline">Terms of Service</a> and <a href="/TermsOfService#cookiepolicy" class="underline">Cookie Policy</a>.</span>
                @*<input type="checkbox" name="TOSAccepted" value="TOSAccepted"> I agree to the <a href="/TermsOfService" class="underline">Terms of Service</a> and <a href="/TermsOfService#cookiepolicy" class="underline">Cookie Policy</a>.<br>*@
            </div>



            @if (!string.IsNullOrWhiteSpace(ViewBag.returnUrl))
            {
                @Html.Hidden("returnUrl", ViewBag.returnUrl as string)
                @Html.Hidden("prevPageMessage", ViewBag.prevPageMessage as string)
            }

            <div class="form-group pull-right">
                <div class="col-md-offset-2 col-md-10 ">
                    @if (!string.IsNullOrWhiteSpace(ViewBag.prevPageMessage))
                    {
                        <input type="submit" class="btn btn-inverse" value="@("Sign up and " + ViewBag.prevPageMessage)" />
                    }
                    else
                    {
                        <input type="submit" class="btn btn-inverse" value="Sign Up" />
                    }
                </div>
            </div>


        </div>

    </div>

}

<div id="div1">
</div>

<div class="row">
    <div class="col-md-4 col-md-offset-4">
        <section id="socialLoginForm">
            @*@Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })*@
        </section>
    </div>
</div>